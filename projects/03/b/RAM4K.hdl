// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load,
             sel=address[9..11],
             a=loadram7,
             b=loadram6,
             c=loadram5,
             d=loadram4,
             e=loadram3,
             f=loadram2,
             g=loadram1,
             h=loadram0);

    RAM512(in=in, load=loadram7, address=address[0..8], out=ram7);
    RAM512(in=in, load=loadram6, address=address[0..8], out=ram6);
    RAM512(in=in, load=loadram5, address=address[0..8], out=ram5);
    RAM512(in=in, load=loadram4, address=address[0..8], out=ram4);
    RAM512(in=in, load=loadram3, address=address[0..8], out=ram3);
    RAM512(in=in, load=loadram2, address=address[0..8], out=ram2);
    RAM512(in=in, load=loadram1, address=address[0..8], out=ram1);
    RAM512(in=in, load=loadram0, address=address[0..8], out=ram0);

    Mux8Way16(sel=address[9..11],
             a=ram7,
             b=ram6,
             c=ram5,
             d=ram4,
             e=ram3,
             f=ram2,
             g=ram1,
             h=ram0,
             out=out);
}